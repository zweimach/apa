use skeptic/prelude::*;
use skeptic/fs;
use skeptic/io;
use skeptic/mem::{@, Allocator};
use skeptic/os;

pub fn main() {
    implicit Allocator = mem::cAllocator;

    const homeDir = os::homeDir() |> handleErr(_);
    const filePath = fs::path::join(_&_, { homeDir, ".bashrc"});
    const file = fs.openFile(filePath, fs::Permission::Read) |> handleErr(_);
    defer file->close();
    const result = file->readAll(_&_, Nothing) |> handleErr(_);
    io::println("{}", { result }) |> handleErr(_);
}

@panic
fn handleErr[E, T](v: Result[E, T]) T {
    const e = switch v {
        Ok{v} => return v,
        Err{e} => e,
    };
    if const Err{e} = io::println("{}", { e->toString() }) {
        os::panic(e);
    } else {
        os::exit(1);
    }
}
